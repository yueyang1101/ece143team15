import numpy as np
import pandas as pd

country_abbrev = {
    'Andorra': 'AN',
    'United Arab Emirates': 'AE',
    'Afghanistan': 'AF',
    'Antigua and Barbuda': 'AC',
    'Anguilla': 'AV',
    'Albania': 'AL',
    'Armenia': 'AM',
    'Angola': 'AO',
    'Antarctica': 'AY',
    'Argentina': 'AR',
    'American Samoa': 'AQ',
    'Austria': 'AU',
    'Australia': 'AS',
    'Aruba': 'AA',
    'Azerbaijan': 'AJ',
    'Bosnia and Herzegovina': 'BK',
    'Barbados': 'BB',
    'Bangladesh': 'BG',
    'Belgium': 'BE',
    'Burkina Faso': 'UV',
    'Bulgaria': 'BU',
    'Bahrain': 'BA',
    'Burundi': 'BY',
    'Benin': 'BN',
    'Saint Barthalemy': 'TB',
    'Bermuda': 'BD',
    'Brunei': 'BX',
    'Bolivia': 'BL',
    'Brazil': 'BR',
    'Bahamas': 'BF',
    'Bhutan': 'BT',
    'Bouvet Island': 'BV',
    'Botswana': 'BC',
    'Belarus': 'BO',
    'Belize': 'BH',
    'Canada': 'CA',
    'Cocos Islands': 'CK',
    'Democratic Republic of the Congo': 'CG',
    'Central African Republic': 'CT',
    'Republic of the Congo': 'CF',
    'Switzerland': 'SZ',
    'Ivory Coast': 'IV',
    'Cook Islands': 'CW',
    'Chile': 'CI',
    'Cameroon': 'CM',
    'China': 'CH',
    'Colombia': 'CO',
    'Costa Rica': 'CS',
    'Cuba': 'CU',
    'Cape Verde': 'CV',
    'Curacao': 'UC',
    'Christmas Island': 'KT',
    'Cyprus': 'CY',
    'Czech Republic': 'EZ',
    'Germany': 'GM',
    'Djibouti': 'DJ',
    'Denmark': 'DA',
    'Dominica': 'DO',
    'Dominican Republic': 'DR',
    'Algeria': 'AG',
    'Ecuador': 'EC',
    'Estonia': 'EN',
    'Egypt': 'EG',
    'Western Sahara': 'WI',
    'Eritrea': 'ER',
    'Spain': 'SP',
    'Ethiopia': 'ET',
    'Finland': 'FI',
    'Fiji': 'FJ',
    'Falkland Islands': 'FK',
    'Micronesia': 'FM',
    'Faroe Islands': 'FO',
    'France': 'FR',
    'Gabon': 'GB',
    'United Kingdom': 'UK',
    'Grenada': 'GJ',
    'Georgia': 'GG',
    'French Guiana': 'FG',
    'Guernsey': 'GK',
    'Ghana': 'GH',
    'Gibraltar': 'GI',
    'Greenland': 'GL',
    'Gambia': 'GA',
    'Guinea': 'GV',
    'Guadeloupe': 'GP',
    'Equatorial Guinea': 'EK',
    'Greece': 'GR',
    'South Georgia and the South Sandwich Islands': 'SX',
    'Guatemala': 'GT',
    'Guam': 'GQ',
    'Guinea-Bissau': 'PU',
    'Guyana': 'GY',
    'Hong Kong': 'HK',
    'Heard Island and McDonald Islands': 'HM',
    'Honduras': 'HO',
    'Croatia': 'HR',
    'Haiti': 'HA',
    'Hungary': 'HU',
    'Indonesia': 'ID',
    'Ireland': 'EI',
    'Israel': 'IS',
    'Isle of Man': 'IM',
    'India': 'IN',
    'British Indian Ocean Territory': 'IO',
    'Iraq': 'IZ',
    'Iran': 'IR',
    'Iceland': 'IC',
    'Italy': 'IT',
    'Jersey': 'JE',
    'Jamaica': 'JM',
    'Jordan': 'JO',
    'Japan': 'JA',
    'Kenya': 'KE',
    'Kyrgyzstan': 'KG',
    'Cambodia': 'CB',
    'Kiribati': 'KR',
    'Comoros': 'CN',
    'Saint Kitts and Nevis': 'SC',
    'North Korea': 'KN',
    'South Korea': 'KS',
    'Kosovo': 'KV',
    'Kuwait': 'KU',
    'Cayman Islands': 'CJ',
    'Kazakhstan': 'KZ',
    'Laos': 'LA',
    'Lebanon': 'LE',
    'Saint Lucia': 'ST',
    'Liechtenstein': 'LS',
    'Sri Lanka': 'CE',
    'Liberia': 'LI',
    'Lesotho': 'LT',
    'Lithuania': 'LH',
    'Luxembourg': 'LU',
    'Latvia': 'LG',
    'Libya': 'LY',
    'Morocco': 'MO',
    'Monaco': 'MN',
    'Moldova': 'MD',
    'Montenegro': 'MJ',
    'Saint Martin': 'RN',
    'Madagascar': 'MA',
    'Marshall Islands': 'RM',
    'Macedonia': 'MK',
    'Mali': 'ML',
    'Myanmar': 'BM',
    'Mongolia': 'MG',
    'Macao': 'MC',
    'Northern Mariana Islands': 'CQ',
    'Martinique': 'MB',
    'Mauritania': 'MR',
    'Montserrat': 'MH',
    'Malta': 'MT',
    'Mauritius': 'MP',
    'Maldives': 'MV',
    'Malawi': 'MI',
    'Mexico': 'MX',
    'Malaysia': 'MY',
    'Mozambique': 'MZ',
    'Namibia': 'WA',
    'New Caledonia': 'NC',
    'Niger': 'NG',
    'Norfolk Island': 'NF',
    'Nigeria': 'NI',
    'Nicaragua': 'NU',
    'Netherlands': 'NL',
    'Norway': 'NO',
    'Nepal': 'NP',
    'Nauru': 'NR',
    'Niue': 'NE',
    'New Zealand': 'NZ',
    'Oman': 'MU',
    'Panama': 'PM',
    'Peru': 'PE',
    'French Polynesia': 'FP',
    'Papua New Guinea': 'PP',
    'Philippines': 'RP',
    'Pakistan': 'PK',
    'Poland': 'PL',
    'Saint Pierre and Miquelon': 'SB',
    'Pitcairn': 'PC',
    'Puerto Rico': 'RQ',
    'Palestinian Territory': 'WE',
    'Portugal': 'PO',
    'Palau': 'PS',
    'Paraguay': 'PA',
    'Qatar': 'QA',
    'Reunion': 'RE',
    'Romania': 'RO',
    'Serbia': 'RI',
    'Russia': 'RS',
    'Rwanda': 'RW',
    'Saudi Arabia': 'SA',
    'Solomon Islands': 'BP',
    'Seychelles': 'SE',
    'Sudan': 'SU',
    'South Sudan': 'OD',
    'Sweden': 'SW',
    'Singapore': 'SN',
    'Saint Helena': 'SH',
    'Slovenia': 'SI',
    'Svalbard and Jan Mayen': 'SV',
    'Slovakia': 'LO',
    'Sierra Leone': 'SL',
    'San Marino': 'SM',
    'Senegal': 'SG',
    'Somalia': 'SO',
    'Suriname': 'NS',
    'Sao Tome and Principe': 'TP',
    'El Salvador': 'ES',
    'Sint Maarten': 'NN',
    'Syria': 'SY',
    'Swaziland': 'WZ',
    'Turks and Caicos Islands': 'TK',
    'Chad': 'CD',
    'French Southern Territories': 'FS',
    'Togo': 'TO',
    'Thailand': 'TH',
    'Tajikistan': 'TI',
    'Tokelau': 'TL',
    'East Timor': 'TT',
    'Turkmenistan': 'TX',
    'Tunisia': 'TS',
    'Tonga': 'TN',
    'Turkey': 'TU',
    'Trinidad and Tobago': 'TD',
    'Tuvalu': 'TV',
    'Taiwan': 'TW',
    'Tanzania': 'TZ',
    'Ukraine': 'UP',
    'Uganda': 'UG',
    'United States': 'US',
    'Uruguay': 'UY',
    'Uzbekistan': 'UZ',
    'Vatican': 'VT',
    'Saint Vincent and the Grenadines': 'VC',
    'Venezuela': 'VE',
    'British Virgin Islands': 'VI',
    'U.S. Virgin Islands': 'VQ',
    'Vietnam': 'VM',
    'Vanuatu': 'NH',
    'Wallis and Futuna': 'WF',
    'Samoa': 'WS',
    'Yemen': 'YM',
    'Mayotte': 'MF',
    'South Africa': 'SF',
    'Zambia': 'ZA',
    'Zimbabwe': 'ZI',
    'Serbia and Montenegro': 'YI',
    'Netherlands Antilles': 'NT',
}
allcountries = list(country_abbrev.keys())


def processdata(tradeCO2, year,  countrylist = allcountries):
    '''
    Give the dataset with the given country list and years interested to study
    :param 
        Input: tradeCO2  -- > The dataframe of each of countries Trade CO2, reading it from the CSV final_metric
               countrylist  -- >a list of country names, and the default is list including all the countries in the world
               year -- > an int for year to study
    Output: :return: a dataframe with interested data information
    '''
    assert isinstance(tradeCO2, pd.DataFrame)
    assert isinstance(countrylist, list)
    assert isinstance(year, int)
    
  
    is_year = tradeCO2['Year'] >= year
    after_year = tradeCO2[is_year]
    interested_country = [item in countrylist  for item in after_year['Entity']]
    countrydata = after_year[interested_country]
    #net = production - consumption
    countrydata['netCO2'] =   countrydata['Production-based (tonnes )']- countrydata['Consumption-based (tonnes)']
    
    return countrydata
